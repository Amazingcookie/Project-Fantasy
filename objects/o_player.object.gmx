<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_p1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set relative position on the map
mapx = 2
mapy = 2

//Records all your steps, so you can walk back to where you came from
movex[1] = mapx
movey[1] = mapy
movenr = 1

//Dice's roll.
roll = 6+1

rolling = true

image_speed = 1/30

xoffset = 0; yoffset = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xoffset += sign(xoffset)*-4
yoffset += sign(yoffset)*-4

xx = keyboard_check_pressed(vk_right)-keyboard_check_pressed(vk_left)
yy = keyboard_check_pressed(vk_down)-keyboard_check_pressed(vk_up)

if xx != 0 &amp;&amp; map[mapx+xx,mapy] != 0 &amp;&amp; !rolling
movechar(xx,0)
if yy != 0 &amp;&amp; map[mapx,mapy+yy] != 0 &amp;&amp; !rolling
movechar(0,yy)

if rolling == true
{
if keyboard_check_pressed(vk_anykey)
rolling = false
else
roll = irandom_range(2,7)
}

if keyboard_check_pressed(vk_backspace) &amp;&amp; movenr != 1
{movenr -=1; mapx = movex[movenr]; mapy = movey[movenr]}

if movenr == roll &amp;&amp; keyboard_check_pressed(vk_enter)
{
  movex = 0; movey = 0;
  movex[1] = mapx; movey[1] = mapy
  movenr = 1; rolling = true
  if map[movex[1],movey[1]] == -1 || map[movex[1],movey[1]] == -2
  {scr_warp(map[movex[1],movey[1]])}
}

if image_index &gt;= 2 {image_index =0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,mapx*32+xoffset,mapy*32+yoffset)

if roll == movenr
draw_sprite(s_stophere,0,mapx*32+28+xoffset,mapy*32+4+yoffset)

draw_sprite(s_dice,roll-movenr,mapx*32+16+xoffset,mapy*32-12+yoffset)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
